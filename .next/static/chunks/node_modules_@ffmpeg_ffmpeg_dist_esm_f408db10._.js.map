{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/%40ffmpeg/ffmpeg/dist/esm/const.js"],"sourcesContent":["export const MIME_TYPE_JAVASCRIPT = \"text/javascript\";\nexport const MIME_TYPE_WASM = \"application/wasm\";\nexport const CORE_VERSION = \"0.12.9\";\nexport const CORE_URL = `https://unpkg.com/@ffmpeg/core@${CORE_VERSION}/dist/umd/ffmpeg-core.js`;\nexport var FFMessageType;\n(function (FFMessageType) {\n    FFMessageType[\"LOAD\"] = \"LOAD\";\n    FFMessageType[\"EXEC\"] = \"EXEC\";\n    FFMessageType[\"FFPROBE\"] = \"FFPROBE\";\n    FFMessageType[\"WRITE_FILE\"] = \"WRITE_FILE\";\n    FFMessageType[\"READ_FILE\"] = \"READ_FILE\";\n    FFMessageType[\"DELETE_FILE\"] = \"DELETE_FILE\";\n    FFMessageType[\"RENAME\"] = \"RENAME\";\n    FFMessageType[\"CREATE_DIR\"] = \"CREATE_DIR\";\n    FFMessageType[\"LIST_DIR\"] = \"LIST_DIR\";\n    FFMessageType[\"DELETE_DIR\"] = \"DELETE_DIR\";\n    FFMessageType[\"ERROR\"] = \"ERROR\";\n    FFMessageType[\"DOWNLOAD\"] = \"DOWNLOAD\";\n    FFMessageType[\"PROGRESS\"] = \"PROGRESS\";\n    FFMessageType[\"LOG\"] = \"LOG\";\n    FFMessageType[\"MOUNT\"] = \"MOUNT\";\n    FFMessageType[\"UNMOUNT\"] = \"UNMOUNT\";\n})(FFMessageType || (FFMessageType = {}));\n"],"names":[],"mappings":";;;;;;;AAAO,MAAM,uBAAuB;AAC7B,MAAM,iBAAiB;AACvB,MAAM,eAAe;AACrB,MAAM,WAAW,CAAC,+BAA+B,EAAE,aAAa,wBAAwB,CAAC;AACzF,IAAI;AACX,CAAC,SAAU,aAAa;IACpB,aAAa,CAAC,OAAO,GAAG;IACxB,aAAa,CAAC,OAAO,GAAG;IACxB,aAAa,CAAC,UAAU,GAAG;IAC3B,aAAa,CAAC,aAAa,GAAG;IAC9B,aAAa,CAAC,YAAY,GAAG;IAC7B,aAAa,CAAC,cAAc,GAAG;IAC/B,aAAa,CAAC,SAAS,GAAG;IAC1B,aAAa,CAAC,aAAa,GAAG;IAC9B,aAAa,CAAC,WAAW,GAAG;IAC5B,aAAa,CAAC,aAAa,GAAG;IAC9B,aAAa,CAAC,QAAQ,GAAG;IACzB,aAAa,CAAC,WAAW,GAAG;IAC5B,aAAa,CAAC,WAAW,GAAG;IAC5B,aAAa,CAAC,MAAM,GAAG;IACvB,aAAa,CAAC,QAAQ,GAAG;IACzB,aAAa,CAAC,UAAU,GAAG;AAC/B,CAAC,EAAE,iBAAiB,CAAC,gBAAgB,CAAC,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 43, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/%40ffmpeg/ffmpeg/dist/esm/utils.js"],"sourcesContent":["/**\n * Generate an unique message ID.\n */\nexport const getMessageID = (() => {\n    let messageID = 0;\n    return () => messageID++;\n})();\n"],"names":[],"mappings":"AAAA;;CAEC;;;AACM,MAAM,eAAe,CAAC;IACzB,IAAI,YAAY;IAChB,OAAO,IAAM;AACjB,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 58, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/%40ffmpeg/ffmpeg/dist/esm/errors.js"],"sourcesContent":["export const ERROR_UNKNOWN_MESSAGE_TYPE = new Error(\"unknown message type\");\nexport const ERROR_NOT_LOADED = new Error(\"ffmpeg is not loaded, call `await ffmpeg.load()` first\");\nexport const ERROR_TERMINATED = new Error(\"called FFmpeg.terminate()\");\nexport const ERROR_IMPORT_FAILURE = new Error(\"failed to import ffmpeg-core.js\");\n"],"names":[],"mappings":";;;;;;AAAO,MAAM,6BAA6B,IAAI,MAAM;AAC7C,MAAM,mBAAmB,IAAI,MAAM;AACnC,MAAM,mBAAmB,IAAI,MAAM;AACnC,MAAM,uBAAuB,IAAI,MAAM","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 89, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/%40ffmpeg/ffmpeg/dist/esm/classes.js"],"sourcesContent":["import { FFMessageType } from \"./const.js\";\nimport { getMessageID } from \"./utils.js\";\nimport { ERROR_TERMINATED, ERROR_NOT_LOADED } from \"./errors.js\";\n/**\n * Provides APIs to interact with ffmpeg web worker.\n *\n * @example\n * ```ts\n * const ffmpeg = new FFmpeg();\n * ```\n */\nexport class FFmpeg {\n    #worker = null;\n    /**\n     * #resolves and #rejects tracks Promise resolves and rejects to\n     * be called when we receive message from web worker.\n     */\n    #resolves = {};\n    #rejects = {};\n    #logEventCallbacks = [];\n    #progressEventCallbacks = [];\n    loaded = false;\n    /**\n     * register worker message event handlers.\n     */\n    #registerHandlers = () => {\n        if (this.#worker) {\n            this.#worker.onmessage = ({ data: { id, type, data }, }) => {\n                switch (type) {\n                    case FFMessageType.LOAD:\n                        this.loaded = true;\n                        this.#resolves[id](data);\n                        break;\n                    case FFMessageType.MOUNT:\n                    case FFMessageType.UNMOUNT:\n                    case FFMessageType.EXEC:\n                    case FFMessageType.FFPROBE:\n                    case FFMessageType.WRITE_FILE:\n                    case FFMessageType.READ_FILE:\n                    case FFMessageType.DELETE_FILE:\n                    case FFMessageType.RENAME:\n                    case FFMessageType.CREATE_DIR:\n                    case FFMessageType.LIST_DIR:\n                    case FFMessageType.DELETE_DIR:\n                        this.#resolves[id](data);\n                        break;\n                    case FFMessageType.LOG:\n                        this.#logEventCallbacks.forEach((f) => f(data));\n                        break;\n                    case FFMessageType.PROGRESS:\n                        this.#progressEventCallbacks.forEach((f) => f(data));\n                        break;\n                    case FFMessageType.ERROR:\n                        this.#rejects[id](data);\n                        break;\n                }\n                delete this.#resolves[id];\n                delete this.#rejects[id];\n            };\n        }\n    };\n    /**\n     * Generic function to send messages to web worker.\n     */\n    #send = ({ type, data }, trans = [], signal) => {\n        if (!this.#worker) {\n            return Promise.reject(ERROR_NOT_LOADED);\n        }\n        return new Promise((resolve, reject) => {\n            const id = getMessageID();\n            this.#worker && this.#worker.postMessage({ id, type, data }, trans);\n            this.#resolves[id] = resolve;\n            this.#rejects[id] = reject;\n            signal?.addEventListener(\"abort\", () => {\n                reject(new DOMException(`Message # ${id} was aborted`, \"AbortError\"));\n            }, { once: true });\n        });\n    };\n    on(event, callback) {\n        if (event === \"log\") {\n            this.#logEventCallbacks.push(callback);\n        }\n        else if (event === \"progress\") {\n            this.#progressEventCallbacks.push(callback);\n        }\n    }\n    off(event, callback) {\n        if (event === \"log\") {\n            this.#logEventCallbacks = this.#logEventCallbacks.filter((f) => f !== callback);\n        }\n        else if (event === \"progress\") {\n            this.#progressEventCallbacks = this.#progressEventCallbacks.filter((f) => f !== callback);\n        }\n    }\n    /**\n     * Loads ffmpeg-core inside web worker. It is required to call this method first\n     * as it initializes WebAssembly and other essential variables.\n     *\n     * @category FFmpeg\n     * @returns `true` if ffmpeg core is loaded for the first time.\n     */\n    load = ({ classWorkerURL, ...config } = {}, { signal } = {}) => {\n        if (!this.#worker) {\n            this.#worker = classWorkerURL ?\n                new Worker(new URL(classWorkerURL, import.meta.url), {\n                    type: \"module\",\n                }) :\n                // We need to duplicated the code here to enable webpack\n                // to bundle worekr.js here.\n                new Worker(new URL(\"./worker.js\", import.meta.url), {\n                    type: \"module\",\n                });\n            this.#registerHandlers();\n        }\n        return this.#send({\n            type: FFMessageType.LOAD,\n            data: config,\n        }, undefined, signal);\n    };\n    /**\n     * Execute ffmpeg command.\n     *\n     * @remarks\n     * To avoid common I/O issues, [\"-nostdin\", \"-y\"] are prepended to the args\n     * by default.\n     *\n     * @example\n     * ```ts\n     * const ffmpeg = new FFmpeg();\n     * await ffmpeg.load();\n     * await ffmpeg.writeFile(\"video.avi\", ...);\n     * // ffmpeg -i video.avi video.mp4\n     * await ffmpeg.exec([\"-i\", \"video.avi\", \"video.mp4\"]);\n     * const data = ffmpeg.readFile(\"video.mp4\");\n     * ```\n     *\n     * @returns `0` if no error, `!= 0` if timeout (1) or error.\n     * @category FFmpeg\n     */\n    exec = (\n    /** ffmpeg command line args */\n    args, \n    /**\n     * milliseconds to wait before stopping the command execution.\n     *\n     * @defaultValue -1\n     */\n    timeout = -1, { signal } = {}) => this.#send({\n        type: FFMessageType.EXEC,\n        data: { args, timeout },\n    }, undefined, signal);\n    /**\n     * Execute ffprobe command.\n     *\n     * @example\n     * ```ts\n     * const ffmpeg = new FFmpeg();\n     * await ffmpeg.load();\n     * await ffmpeg.writeFile(\"video.avi\", ...);\n     * // Getting duration of a video in seconds: ffprobe -v error -show_entries format=duration -of default=noprint_wrappers=1:nokey=1 video.avi -o output.txt\n     * await ffmpeg.ffprobe([\"-v\", \"error\", \"-show_entries\", \"format=duration\", \"-of\", \"default=noprint_wrappers=1:nokey=1\", \"video.avi\", \"-o\", \"output.txt\"]);\n     * const data = ffmpeg.readFile(\"output.txt\");\n     * ```\n     *\n     * @returns `0` if no error, `!= 0` if timeout (1) or error.\n     * @category FFmpeg\n     */\n    ffprobe = (\n    /** ffprobe command line args */\n    args, \n    /**\n     * milliseconds to wait before stopping the command execution.\n     *\n     * @defaultValue -1\n     */\n    timeout = -1, { signal } = {}) => this.#send({\n        type: FFMessageType.FFPROBE,\n        data: { args, timeout },\n    }, undefined, signal);\n    /**\n     * Terminate all ongoing API calls and terminate web worker.\n     * `FFmpeg.load()` must be called again before calling any other APIs.\n     *\n     * @category FFmpeg\n     */\n    terminate = () => {\n        const ids = Object.keys(this.#rejects);\n        // rejects all incomplete Promises.\n        for (const id of ids) {\n            this.#rejects[id](ERROR_TERMINATED);\n            delete this.#rejects[id];\n            delete this.#resolves[id];\n        }\n        if (this.#worker) {\n            this.#worker.terminate();\n            this.#worker = null;\n            this.loaded = false;\n        }\n    };\n    /**\n     * Write data to ffmpeg.wasm.\n     *\n     * @example\n     * ```ts\n     * const ffmpeg = new FFmpeg();\n     * await ffmpeg.load();\n     * await ffmpeg.writeFile(\"video.avi\", await fetchFile(\"../video.avi\"));\n     * await ffmpeg.writeFile(\"text.txt\", \"hello world\");\n     * ```\n     *\n     * @category File System\n     */\n    writeFile = (path, data, { signal } = {}) => {\n        const trans = [];\n        if (data instanceof Uint8Array) {\n            trans.push(data.buffer);\n        }\n        return this.#send({\n            type: FFMessageType.WRITE_FILE,\n            data: { path, data },\n        }, trans, signal);\n    };\n    mount = (fsType, options, mountPoint) => {\n        const trans = [];\n        return this.#send({\n            type: FFMessageType.MOUNT,\n            data: { fsType, options, mountPoint },\n        }, trans);\n    };\n    unmount = (mountPoint) => {\n        const trans = [];\n        return this.#send({\n            type: FFMessageType.UNMOUNT,\n            data: { mountPoint },\n        }, trans);\n    };\n    /**\n     * Read data from ffmpeg.wasm.\n     *\n     * @example\n     * ```ts\n     * const ffmpeg = new FFmpeg();\n     * await ffmpeg.load();\n     * const data = await ffmpeg.readFile(\"video.mp4\");\n     * ```\n     *\n     * @category File System\n     */\n    readFile = (path, \n    /**\n     * File content encoding, supports two encodings:\n     * - utf8: read file as text file, return data in string type.\n     * - binary: read file as binary file, return data in Uint8Array type.\n     *\n     * @defaultValue binary\n     */\n    encoding = \"binary\", { signal } = {}) => this.#send({\n        type: FFMessageType.READ_FILE,\n        data: { path, encoding },\n    }, undefined, signal);\n    /**\n     * Delete a file.\n     *\n     * @category File System\n     */\n    deleteFile = (path, { signal } = {}) => this.#send({\n        type: FFMessageType.DELETE_FILE,\n        data: { path },\n    }, undefined, signal);\n    /**\n     * Rename a file or directory.\n     *\n     * @category File System\n     */\n    rename = (oldPath, newPath, { signal } = {}) => this.#send({\n        type: FFMessageType.RENAME,\n        data: { oldPath, newPath },\n    }, undefined, signal);\n    /**\n     * Create a directory.\n     *\n     * @category File System\n     */\n    createDir = (path, { signal } = {}) => this.#send({\n        type: FFMessageType.CREATE_DIR,\n        data: { path },\n    }, undefined, signal);\n    /**\n     * List directory contents.\n     *\n     * @category File System\n     */\n    listDir = (path, { signal } = {}) => this.#send({\n        type: FFMessageType.LIST_DIR,\n        data: { path },\n    }, undefined, signal);\n    /**\n     * Delete an empty directory.\n     *\n     * @category File System\n     */\n    deleteDir = (path, { signal } = {}) => this.#send({\n        type: FFMessageType.DELETE_DIR,\n        data: { path },\n    }, undefined, signal);\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 414, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/%40ffmpeg/ffmpeg/dist/esm/types.js"],"sourcesContent":["export var FFFSType;\n(function (FFFSType) {\n    FFFSType[\"MEMFS\"] = \"MEMFS\";\n    FFFSType[\"NODEFS\"] = \"NODEFS\";\n    FFFSType[\"NODERAWFS\"] = \"NODERAWFS\";\n    FFFSType[\"IDBFS\"] = \"IDBFS\";\n    FFFSType[\"WORKERFS\"] = \"WORKERFS\";\n    FFFSType[\"PROXYFS\"] = \"PROXYFS\";\n})(FFFSType || (FFFSType = {}));\n"],"names":[],"mappings":";;;AAAO,IAAI;AACX,CAAC,SAAU,QAAQ;IACf,QAAQ,CAAC,QAAQ,GAAG;IACpB,QAAQ,CAAC,SAAS,GAAG;IACrB,QAAQ,CAAC,YAAY,GAAG;IACxB,QAAQ,CAAC,QAAQ,GAAG;IACpB,QAAQ,CAAC,WAAW,GAAG;IACvB,QAAQ,CAAC,UAAU,GAAG;AAC1B,CAAC,EAAE,YAAY,CAAC,WAAW,CAAC,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 432, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/%40ffmpeg/ffmpeg/dist/esm/index.js"],"sourcesContent":["export * from \"./classes.js\";\nexport * from \"./types.js\";\n"],"names":[],"mappings":";AAAA;AACA","ignoreList":[0],"debugId":null}}]
}